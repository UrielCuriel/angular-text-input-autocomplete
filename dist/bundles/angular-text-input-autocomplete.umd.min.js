!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("rxjs"),require("textarea-caret"),require("rxjs/operators"),require("@angular/common")):"function"==typeof define&&define.amd?define("angular-text-input-autocomplete",["exports","@angular/core","rxjs","textarea-caret","rxjs/operators","@angular/common"],t):t(e["angular-text-input-autocomplete"]={},e.ng.core,e.rxjs,e.getCaretCoordinates,e.rxjs.operators,e.ng.common)}(this,function(e,r,s,a,h,t){"use strict";a=a&&a.hasOwnProperty("default")?a["default"]:a;var c=(Object.defineProperty(n.prototype,"choices",{get:function(){return this._choices},set:function(e){-1===(this._choices=e).indexOf(this.activeChoice)&&0<e.length&&(this.activeChoice=e[0])},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"top",{get:function(){var e=window.screen.height,t=this.dropdownMenuElement?this.dropdownMenuElement.nativeElement.offsetHeight:0;return this.position.top+t<e?this.position.top:this.position.top-t},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"left",{get:function(){var e=window.screen.width,t=this.dropdownMenuElement?this.dropdownMenuElement.nativeElement.offsetWidth:0;return this.position.left+t<e?this.position.left:this.position.left-t},enumerable:!0,configurable:!0}),n.prototype.onArrowDown=function(e){e.preventDefault();e=this.choices.indexOf(this.activeChoice);this.choices[e+1]&&this.scrollToChoice(e+1)},n.prototype.onArrowUp=function(e){e.preventDefault();e=this.choices.indexOf(this.activeChoice);this.choices[e-1]&&this.scrollToChoice(e-1)},n.prototype.onEnter=function(e){-1<this.choices.indexOf(this.activeChoice)&&(e.preventDefault(),this.selectChoice.next(this.activeChoice))},n.prototype.scrollToChoice=function(e){var t,n;this.activeChoice=this._choices[e],this.dropdownMenuElement&&(t=this.dropdownMenuElement.nativeElement.getBoundingClientRect(),(e=(n=this.dropdownMenuElement.nativeElement.children[e]).getBoundingClientRect()).top<t.top?n.scrollIntoView():e.bottom>t.bottom&&n.scrollIntoView(!1))},n.decorators=[{type:r.Component,args:[{selector:"mwl-text-input-autocomplete-menu",template:'\n    <div\n      *ngIf="choices?.length > 0"\n      #dropdownMenu\n      class="dropdown-menu">\n        <a  *ngFor="let choice of choices; trackBy:trackById"\n        [class.active]="activeChoice === choice"\n          (click)="selectChoice.next(choice)" class="dropdown-item">\n          {{ choice }}\n        </a>\n    </div>\n  ',styles:["\n      :host {\n        z-index: 100000;\n        position: fixed;\n      }\n      .dropdown-menu {\n        display: block;\n        max-height: 200px;\n        overflow-y: auto;\n      }\n    "]}]}],n.propDecorators={dropdownMenuElement:[{type:r.ViewChild,args:["dropdownMenu"]}],top:[{type:r.HostBinding,args:["style.top.px"]}],left:[{type:r.HostBinding,args:["style.left.px"]}],onArrowDown:[{type:r.HostListener,args:["document:keydown.ArrowDown",["$event"]]}],onArrowUp:[{type:r.HostListener,args:["document:keydown.ArrowUp",["$event"]]}],onEnter:[{type:r.HostListener,args:["document:keydown.Enter",["$event"]]}]},n);function n(){this.selectChoice=new s.Subject,this.choiceLoading=!1,this.trackById=function(e,t){return"undefined"!=typeof t.id?t.id:t}}var o=(i.prototype.onKeypress=function(e){("**"!==this.triggerCharacter&&e===this.triggerCharacter||"**"===this.triggerCharacter&&/[a-z|A-Z]/.test(e))&&this.showMenu()},i.prototype.onChange=function(e){var t,n,o=this;this.menu&&(e&&(e[this.menu.triggerCharacterPosition]===this.triggerCharacter||"**"===this.triggerCharacter)&&!((t=this.elm.nativeElement.selectionStart)<this.menu.triggerCharacterPosition)&&(n=e.slice(this.menu.triggerCharacterPosition+("**"===this.triggerCharacter?0:1),t)).match(this.searchRegexp)?(this.menu.component.instance.searchText=n,this.menu.component.instance.choices=[],this.menu.component.instance.choiceLoadError=undefined,this.menu.component.instance.choiceLoading=!0,this.menu.component.changeDetectorRef.detectChanges(),Promise.resolve(this.findChoices(n)).then(function(e){o.menu&&(o.menu.component.instance.choices=e,o.menu.component.instance.choiceLoading=!1,o.menu.component.changeDetectorRef.detectChanges())})["catch"](function(e){o.menu&&(o.menu.component.instance.choiceLoading=!1,o.menu.component.instance.choiceLoadError=e,o.menu.component.changeDetectorRef.detectChanges())})):this.hideMenu())},i.prototype.onBlur=function(){this.menu&&(this.menu.lastCaretPosition=this.elm.nativeElement.selectionStart)},i.prototype.showMenu=function(){var e,t,n,o,i,c=this;this.menu||(o=this.componentFactoryResolver.resolveComponentFactory(this.menuComponent),this.menu={component:this.viewContainerRef.createComponent(o,0,this.injector),triggerCharacterPosition:this.elm.nativeElement.selectionStart},this.menuElem=this.menu.component.hostView.rootNodes[0],document.body.appendChild(this.menuElem),e=+getComputedStyle(this.elm.nativeElement).lineHeight.replace(/px$/,""),t=this.elm.nativeElement.getBoundingClientRect().top,n=this.elm.nativeElement.getBoundingClientRect().left,o=(i=a(this.elm.nativeElement,this.elm.nativeElement.selectionStart)).top,i=i.left,this.menu.component.instance.position={top:t+o+e,left:n+i},this.menu.component.changeDetectorRef.detectChanges(),this.menu.component.instance.selectChoice.pipe(h.takeUntil(this.menuHidden$)).subscribe(function(e){var t=c.getChoiceLabel(e),n=c.elm.nativeElement,o=n.value,i=c.menu.triggerCharacterPosition,r=o.slice(0,i),s=c.menu.lastCaretPosition||n.selectionStart,s=o.slice(s);n.value=r+t+s,n.dispatchEvent(new Event("input")),c.hideMenu();r=(r+t).length;n.setSelectionRange(r,r),n.focus(),c.choiceSelected.emit({choice:e,insertedAt:{start:i,end:i+t.length}})}),this.menuShown.emit())},i.prototype.hideMenu=function(){this.menu&&(this.menu.component.destroy(),this.menuHidden$.next(),this.menuHidden.emit(),this.menu=undefined)},i.prototype.ngOnDestroy=function(){this.hideMenu()},i.decorators=[{type:r.Directive,args:[{selector:'textarea[mwlTextInputAutocomplete],input[type="text"][mwlTextInputAutocomplete]'}]}],i.ctorParameters=function(){return[{type:r.ComponentFactoryResolver},{type:r.ViewContainerRef},{type:r.ApplicationRef},{type:r.Injector},{type:r.ElementRef}]},i.propDecorators={triggerCharacter:[{type:r.Input}],searchRegexp:[{type:r.Input}],menuComponent:[{type:r.Input}],menuShown:[{type:r.Output}],menuHidden:[{type:r.Output}],choiceSelected:[{type:r.Output}],findChoices:[{type:r.Input}],getChoiceLabel:[{type:r.Input}],onKeypress:[{type:r.HostListener,args:["keypress",["$event.key"]]}],onChange:[{type:r.HostListener,args:["input",["$event.target.value"]]}],onBlur:[{type:r.HostListener,args:["blur"]}]},i);function i(e,t,n,o,i){this.componentFactoryResolver=e,this.viewContainerRef=t,this.appRef=n,this.injector=o,this.elm=i,this.triggerCharacter="@",this.searchRegexp=/^\w*$/,this.menuComponent=c,this.menuShown=new r.EventEmitter,this.menuHidden=new r.EventEmitter,this.choiceSelected=new r.EventEmitter,this.getChoiceLabel=function(e){return e},this.menuHidden$=new s.Subject}var p=(u.decorators=[{type:r.Component,args:[{selector:"mwl-text-input-autocomplete-container",styles:["\n    :host {\n      position: relative;\n      display: block;\n    }\n  "],template:"<ng-content></ng-content>"}]}],u);function u(){}l.decorators=[{type:r.NgModule,args:[{declarations:[o,p,c],imports:[t.CommonModule],exports:[o,p,c],entryComponents:[c]}]}],t=l;function l(){}e.TextInputAutocompleteMenuComponent=c,e.TextInputAutocompleteModule=t,e.ɵb=p,e.ɵa=o,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=angular-text-input-autocomplete.umd.min.js.map